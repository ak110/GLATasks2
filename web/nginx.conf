client_body_buffer_size 4m;
client_max_body_size 32768m;

# access_log /dev/stdout combined;
access_log off;
error_log /dev/stderr warn;

types {
    application/javascript mjs;
}

server {
    server_tokens off;

    listen 443 ssl;
    listen 443 quic reuseport;
    http2 on;
    add_header Alt-Svc 'h3=":443"; ma=86400';

    ssl_protocols TLSv1.3;
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_session_cache    shared:SSL:50m;
    ssl_session_timeout  1d;
    ssl_session_tickets  off;

    keepalive_timeout 5;

    charset utf-8;
    override_charset on;

    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains;';

    # staticの高速化
    location /static/ {
        alias /var/www/static/;
        access_log off;
        expires off;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept" always;
    }

    location / {
        proxy_pass http://app:8000;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # さらに外側があるなら $http_x_forwarded_proto
        proxy_buffering on;
        proxy_buffers      32 32k;   # 1 MB / 接続
        proxy_buffer_size  32k;
        proxy_max_temp_file_size 32768m;
        proxy_read_timeout 3600;
    }
}
