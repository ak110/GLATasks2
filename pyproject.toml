[project]
name = "glatasks"
dynamic = ["version"]
requires-python = ">=3.14,<4.0"
dependencies = [
    "alembic",
    "bcrypt",
    "better-exceptions",
    "pandas",
    "pycryptodome",
    "pymysql",
    "python-dotenv>=1.1.0",
    "pytilpack[all]>=1.20.0",
    "quart",
    "quart-auth",
    "quart-cors",
    "quart-flask-patch",
    "quart-schema",
    "sqlalchemy[asyncio]",
    "uvicorn-worker>=0.3.0",
    "uvicorn[standard]>=0.34.3",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyfltr",
    "types-pyyaml",
    "types-requests",
    "uv-sort>=0.6.0",
]

[tool.uv]
package = false

[tool.uv.sources]
pyfltr = { git = "https://github.com/ak110/pyfltr.git" }
pytilpack = { git = "https://github.com/ak110/pytilpack.git" }

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.pyfltr]
preset = "latest"
pyright = true
pylint-args = ["--jobs=4"]
extend-exclude = ["data"]

[tool.ruff]
line-length = 128

[tool.ruff.lint]
# https://docs.astral.sh/ruff/linter/#rule-selection
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.isort]
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#isort
# https://pycqa.github.io/isort/docs/configuration/options.html
profile = "black"

[tool.black]
# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html
skip-magic-trailing-comma = true

[tool.flake8]
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#flake8
# https://flake8.pycqa.org/en/latest/user/configuration.html
max-line-length = 128
extend-ignore = "E203,"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
allow_redefinition = true
check_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
show_error_codes = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--showlocals -p no:cacheprovider --maxfail=5 --durations=30 --durations-min=0.5"
log_level = "DEBUG"
xfail_strict = true
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"
